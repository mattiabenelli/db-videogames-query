1- Selezionare tutte le software house americane (3)

    select *
    from software_houses sh 
    where country like 'United States' 


2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)

    select *
    from players p 
    where city like "Rogahnland"


3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)

    select *
    from players p 
    where name like "%a"


4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)

    select *
    from reviews r 
    where player_id = 800


5- Contare quanti tornei ci sono stati nell'anno 2015 (9)

    select *
    from tournaments t 
    where `year` = 2015


6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)

    select *
    from awards a 
    where description like "%facere%"


7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)

    select distinct  videogame_id 
    from category_videogame cv 
    where category_id = 2 or category_id = 6


8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)

    select *
    from reviews r 
    where rating between 2 and 4


9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)

    select *
    from videogames v 
    where year(release_date) = 2020


10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da stelle, mostrandoli una sola volta (443)

    select distinct videogame_id 
    from reviews r 
    where rating = 5


#### Bonus
11- Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)

    select count(*), avg(rating) 
    from reviews r 
    where videogame_id = 412


12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)

    select *
    from videogames v 
    where software_house_id = 1 and year(release_date) = 2018


---

### GROUP BY
1- Contare quante software house ci sono per ogni paese (3)

    select country, count(*) 
    from software_houses sh 
    group by country 


2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)

    select count(*), videogame_id
    from reviews r 
    group by videogame_id


3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)

    select pegi_label_id ,count(*)
    from pegi_label_videogame plv 
    group by pegi_label_id 


4- Mostrare il numero di videogiochi rilasciati ogni anno (11)

    select year (release_date) ,count(*) 
    from videogames v 
    group by year (release_date) 


5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)

    select device_id , count(*) 
    from device_videogame dv 
    group by device_id 


6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)

    select videogame_id, avg(rating), count(*) 
    from reviews r 
    group by videogame_id 
    order by avg(rating) asc 

---

### JOIN

1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)

    select distinct p.*
    from reviews r 
    inner join players p 
    on p.id = r.player_id;


2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)

    select distinct v.*
    from tournaments t 
    inner join tournament_videogame tv 
    on tv.tournament_id  = t.id 
    inner join videogames v 
    on v.id = tv.videogame_id 
    where t.`year` = 2016


3- Mostrare le categorie di ogni videogioco (1718)

    select *
    from videogames v 
    inner join category_videogame cv 
    on v.id = cv.videogame_id 
    inner join categories c 
    on c.id = cv.category_id

4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)

    select distinct sh.*
    from software_houses sh 
    inner join videogames v 
    on v.software_house_id = sh.id 
    where year (v.release_date) >2020 

5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)

    select sh.name, v.name , a.name 
    from software_houses sh 
    inner join videogames v 
    on v.software_house_id = sh.id 
    inner join award_videogame av 
    on av.videogame_id = v.id 
    inner join awards a 
    on a.id = av.award_id 


6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)

    select distinct c.*, pl.*, v.*
    from videogames v 
    inner join category_videogame cv
    on cv.videogame_id = v.id
    inner join categories c 
    on c.id = cv.category_id 
    inner join pegi_label_videogame plv 
    on plv.videogame_id = v.id 
    inner join pegi_labels pl 
    on pl.id = plv.pegi_label_id 
    inner join reviews r 
    on r.videogame_id  = v.id
    where r.rating between 4 and 5


7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)

    select distinct  v.*
    from tournaments t 
    inner join player_tournament pt 
    on t.id = pt.tournament_id 
    inner join players p 
    on p.id = pt.player_id 
    inner join tournament_videogame tv 
    on tv.tournament_id = t.id 
    inner join videogames v 
    on v.id = tv.videogame_id 
    where p.name like "%s"

8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)

    select t.*
    from tournaments t 
    inner join tournament_videogame tv 
    on tv.tournament_id  = t.id
    inner join videogames v 
    on v.id = tv.videogame_id 
    inner join award_videogame av 
    on av.videogame_id = v.id 
    inner join awards a 
    on a.id = av.award_id 
    where t.`year` = 2018 and a.name like "Gioco dell'anno"

9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)

    select p.*, av.`year` , a.name 
    from tournaments t 
    inner join tournament_videogame tv 
    on tv.tournament_id  = t.id
    inner join videogames v 
    on v.id = tv.videogame_id 
    inner join award_videogame av 
    on av.videogame_id = v.id 
    inner join awards a 
    on a.id = av.award_id 
    inner join player_tournament pt 
    on pt.tournament_id  = t.id 
    inner join players p 
    on pt.player_id = p.id 
    where a.name like "Gioco più atteso" and av.`year` = 2018 and t.`year` = 2019


#### Bonus
10- Selezionare i dati della prima software house che ha rilasciato un gioco, assieme ai dati del gioco stesso (software house id : 5)


11- Selezionare i dati del videogame (id, name, release_date, totale recensioni) con più recensioni (videogame id : potrebbe uscire 449 o 398, sono entrambi a 20)

12- Selezionare la software house che ha vinto più premi tra il 2015 e il 2016 (software house id : potrebbe uscire 3 o 1, sono entrambi a 3)

13- Selezionare le categorie dei videogame i quali hanno una media recensioni inferiore a 1.5 (10)